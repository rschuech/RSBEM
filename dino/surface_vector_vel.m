function [n_t] = surface_vector_vel(t, theta, time, geom)
%time derivative of unit direction vector from centerline point to surface point

dt = t - geom.t_transition;
d = diff(geom.amp);

if t<= geom.t_min
    n_t = [0 0 0];  %points anywhere on starting sph shouldn't have any velocity

elseif t <= geom.t_transition
    C1 = 1/2*geom.kE(1)^2*geom.lambda^2*t/pi^2;
    B1 = geom.amp(1)*C1*exp(-C1*t/2);
    B2 = geom.amp(1)*(1-exp(-C1*t/2));
    
    n_t(1) = -(8*((-pi^2*B1*B2^2+pi^2*B1^3)*cos(-t + geom.omega*time)^3+((-pi^2*B2^2+pi^2*B1^2)*sin(-t + geom.omega*time)^2-pi^2*B1^2+pi^2*B2^2-(1/4)*geom.lambda^2)*B1*cos(-t + geom.omega*time)-(1/4)*B2*sin(-t + geom.omega*time)*geom.lambda^2))*pi*geom.omega*cos(theta)/((-4*B1^2+4*B2^2)*pi^2*cos(-t + geom.omega*time)^2-8*pi^2*B1*sin(-t + geom.omega*time)*B2*cos(-t + geom.omega*time)+geom.lambda^2+4*pi^2*B1^2)^(3/2);
    n_t(2) = -4 * geom.lambda * pi ^ 2 * cos(theta) * geom.omega * (B1 * cos(-t + geom.omega * time) + B2 * sin(-t + geom.omega * time)) * (B1 * sin(-t + geom.omega * time) - B2 * cos(-t + geom.omega * time)) * (geom.lambda ^ 2 + 4 * pi ^ 2 * B1 ^ 2 - 4 * pi ^ 2 * B1 ^ 2 * cos(-t + geom.omega * time) ^ 2 - 8 * pi ^ 2 * B1 * sin(-t + geom.omega * time) * B2 * cos(-t + geom.omega * time) + 4 * pi ^ 2 * B2 ^ 2 * cos(-t + geom.omega * time) ^ 2) ^ (-3 / 2);
    n_t(3) = 0;
elseif t > geom.t_transition && t <= geom.t_max
    C1 = 1/2*geom.kE(1)^2*geom.lambda^2*t/pi^2;
    B1 = geom.amp(1)*C1*exp(-C1*t/2);
    B2 = geom.amp(1)*(1-exp(-C1*t/2));
    C2 = 1/2*geom.kE(2)^2*geom.lambda^2*dt/pi^2;
    B3 = d*C2*exp(-C2*t/2);
    B4 = d*(1-exp(-C2*t/2));
    
    n_t(1)= -2 * cos(theta) * (-B1 * cos(-t + geom.omega * time) * geom.lambda ^ 2 - cos(-t + geom.omega * time) * B3 * geom.lambda ^ 2 - B2 * sin(-t + geom.omega * time) * geom.lambda ^ 2 - sin(-t + geom.omega * time) * B4 * geom.lambda ^ 2 + 4 * pi ^ 2 * B4 ^ 2 * B3 * cos(-t + geom.omega * time) + 4 * pi ^ 2 * B2 ^ 2 * B1 * cos(-t + geom.omega * time) + 4 * pi ^ 2 * B2 ^ 2 * B3 * cos(-t + geom.omega * time) + 4 * pi ^ 2 * B4 ^ 2 * B1 * cos(-t + geom.omega * time) + 12 * pi ^ 2 * B1 ^ 2 * cos(-t + geom.omega * time) ^ 3 * B3 + 12 * pi ^ 2 * B1 * cos(-t + geom.omega * time) ^ 3 * B3 ^ 2 - 4 * pi ^ 2 * B1 * cos(-t + geom.omega * time) ^ 3 * B2 ^ 2 - 4 * pi ^ 2 * B1 * cos(-t + geom.omega * time) ^ 3 * B4 ^ 2 - 4 * pi ^ 2 * cos(-t + geom.omega * time) ^ 3 * B3 * B2 ^ 2 - 4 * pi ^ 2 * cos(-t + geom.omega * time) ^ 3 * B3 * B4 ^ 2 - 12 * pi ^ 2 * B1 ^ 2 * cos(-t + geom.omega * time) * B3 - 12 * pi ^ 2 * B1 * cos(-t + geom.omega * time) * B3 ^ 2 + 4 * pi ^ 2 * B1 ^ 3 * cos(-t + geom.omega * time) * sin(-t + geom.omega * time) ^ 2 + 4 * pi ^ 2 * cos(-t + geom.omega * time) * B3 ^ 3 * sin(-t + geom.omega * time) ^ 2 + 4 * pi ^ 2 * cos(-t + geom.omega * time) ^ 3 * B3 ^ 3 - 4 * pi ^ 2 * B1 ^ 3 * cos(-t + geom.omega * time) - 4 * pi ^ 2 * cos(-t + geom.omega * time) * B3 ^ 3 + 4 * pi ^ 2 * B1 ^ 3 * cos(-t + geom.omega * time) ^ 3 - 8 * pi ^ 2 * B2 * sin(-t + geom.omega * time) ^ 2 * B1 * cos(-t + geom.omega * time) * B4 - 8 * pi ^ 2 * B2 * sin(-t + geom.omega * time) ^ 2 * B3 * cos(-t + geom.omega * time) * B4 + 12 * pi ^ 2 * B1 ^ 2 * cos(-t + geom.omega * time) * sin(-t + geom.omega * time) ^ 2 * B3 + 12 * pi ^ 2 * B1 * cos(-t + geom.omega * time) * sin(-t + geom.omega * time) ^ 2 * B3 ^ 2 + 8 * pi ^ 2 * B2 * B1 * cos(-t + geom.omega * time) * B4 + 8 * pi ^ 2 * B2 * B3 * cos(-t + geom.omega * time) * B4 - 4 * pi ^ 2 * B2 ^ 2 * sin(-t + geom.omega * time) ^ 2 * B3 * cos(-t + geom.omega * time) - 4 * pi ^ 2 * sin(-t + geom.omega * time) ^ 2 * B4 ^ 2 * B1 * cos(-t + geom.omega * time) - 4 * pi ^ 2 * sin(-t + geom.omega * time) ^ 2 * B4 ^ 2 * B3 * cos(-t + geom.omega * time) - 8 * pi ^ 2 * cos(-t + geom.omega * time) ^ 3 * B3 * B2 * B4 - 8 * pi ^ 2 * B1 * cos(-t + geom.omega * time) ^ 3 * B2 * B4 - 4 * pi ^ 2 * B2 ^ 2 * sin(-t + geom.omega * time) ^ 2 * B1 * cos(-t + geom.omega * time)) * geom.omega * pi * (geom.lambda ^ 2 + 4 * pi ^ 2 * B1 ^ 2 - 4 * pi ^ 2 * B1 ^ 2 * cos(-t + geom.omega * time) ^ 2 + 8 * pi ^ 2 * B1 * B3 - 8 * pi ^ 2 * B1 * B3 * cos(-t + geom.omega * time) ^ 2 - 8 * pi ^ 2 * B1 * sin(-t + geom.omega * time) * B2 * cos(-t + geom.omega * time) - 8 * pi ^ 2 * B1 * sin(-t + geom.omega * time) * cos(-t + geom.omega * time) * B4 + 4 * pi ^ 2 * B3 ^ 2 - 4 * pi ^ 2 * B3 ^ 2 * cos(-t + geom.omega * time) ^ 2 - 8 * pi ^ 2 * sin(-t + geom.omega * time) * B3 * B2 * cos(-t + geom.omega * time) - 8 * pi ^ 2 * sin(-t + geom.omega * time) * B3 * cos(-t + geom.omega * time) * B4 + 4 * pi ^ 2 * B2 ^ 2 * cos(-t + geom.omega * time) ^ 2 + 8 * pi ^ 2 * B2 * cos(-t + geom.omega * time) ^ 2 * B4 + 4 * pi ^ 2 * cos(-t + geom.omega * time) ^ 2 * B4 ^ 2) ^ (-3 / 2);
    n_t(2) = -4 * geom.lambda * pi ^ 2 * cos(theta) * geom.omega * (B1 * cos(-t + geom.omega * time) + cos(-t + geom.omega * time) * B3 + B2 * sin(-t + geom.omega * time) + sin(-t + geom.omega * time) * B4) * (B1 * sin(-t + geom.omega * time) + sin(-t + geom.omega * time) * B3 - B2 * cos(-t + geom.omega * time) - cos(-t + geom.omega * time) * B4) * (geom.lambda ^ 2 + 4 * pi ^ 2 * B1 ^ 2 - 4 * pi ^ 2 * B1 ^ 2 * cos(-t + geom.omega * time) ^ 2 + 8 * pi ^ 2 * B1 * B3 - 8 * pi ^ 2 * B1 * B3 * cos(-t + geom.omega * time) ^ 2 - 8 * pi ^ 2 * B1 * sin(-t + geom.omega * time) * B2 * cos(-t + geom.omega * time) - 8 * pi ^ 2 * B1 * sin(-t + geom.omega * time) * cos(-t + geom.omega * time) * B4 + 4 * pi ^ 2 * B3 ^ 2 - 4 * pi ^ 2 * B3 ^ 2 * cos(-t + geom.omega * time) ^ 2 - 8 * pi ^ 2 * sin(-t + geom.omega * time) * B3 * B2 * cos(-t + geom.omega * time) - 8 * pi ^ 2 * sin(-t + geom.omega * time) * B3 * cos(-t + geom.omega * time) * B4 + 4 * pi ^ 2 * B2 ^ 2 * cos(-t + geom.omega * time) ^ 2 + 8 * pi ^ 2 * B2 * cos(-t + geom.omega * time) ^ 2 * B4 + 4 * pi ^ 2 * cos(-t + geom.omega * time) ^ 2 * B4 ^ 2) ^ (-3 / 2);
    n_t(3) = 0;
    
else
    %everything here should have t_max plugged in for t since this all
    %starts with der = end_der for the part in the hemisphere
    dt = geom.t_max - geom.t_transition;
    C1 = 1/2*geom.kE(1)^2*geom.lambda^2*geom.t_max/pi^2;
    B1 = geom.amp(1)*C1*exp(-C1*geom.t_max/2);
    B2 = geom.amp(1)*(1-exp(-C1*geom.t_max/2));
    C2 = 1/2*geom.kE(2)^2*geom.lambda^2*dt/pi^2;
    B3 = d*C2*exp(-C2*geom.t_max/2);
    B4 = d*(1-exp(-C2*geom.t_max/2));
    
    n_t(1)= -2 * cos(theta) * (-B1 * cos(-geom.t_max + geom.omega * time) * geom.lambda ^ 2 - cos(-geom.t_max + geom.omega * time) * B3 * geom.lambda ^ 2 - B2 * sin(-geom.t_max + geom.omega * time) * geom.lambda ^ 2 - sin(-geom.t_max + geom.omega * time) * B4 * geom.lambda ^ 2 + 4 * pi ^ 2 * B4 ^ 2 * B3 * cos(-geom.t_max + geom.omega * time) + 4 * pi ^ 2 * B2 ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) + 4 * pi ^ 2 * B2 ^ 2 * B3 * cos(-geom.t_max + geom.omega * time) + 4 * pi ^ 2 * B4 ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) + 12 * pi ^ 2 * B1 ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 3 * B3 + 12 * pi ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) ^ 3 * B3 ^ 2 - 4 * pi ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) ^ 3 * B2 ^ 2 - 4 * pi ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) ^ 3 * B4 ^ 2 - 4 * pi ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 3 * B3 * B2 ^ 2 - 4 * pi ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 3 * B3 * B4 ^ 2 - 12 * pi ^ 2 * B1 ^ 2 * cos(-geom.t_max + geom.omega * time) * B3 - 12 * pi ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) * B3 ^ 2 + 4 * pi ^ 2 * B1 ^ 3 * cos(-geom.t_max + geom.omega * time) * sin(-geom.t_max + geom.omega * time) ^ 2 + 4 * pi ^ 2 * cos(-geom.t_max + geom.omega * time) * B3 ^ 3 * sin(-geom.t_max + geom.omega * time) ^ 2 + 4 * pi ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 3 * B3 ^ 3 - 4 * pi ^ 2 * B1 ^ 3 * cos(-geom.t_max + geom.omega * time) - 4 * pi ^ 2 * cos(-geom.t_max + geom.omega * time) * B3 ^ 3 + 4 * pi ^ 2 * B1 ^ 3 * cos(-geom.t_max + geom.omega * time) ^ 3 - 8 * pi ^ 2 * B2 * sin(-geom.t_max + geom.omega * time) ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) * B4 - 8 * pi ^ 2 * B2 * sin(-geom.t_max + geom.omega * time) ^ 2 * B3 * cos(-geom.t_max + geom.omega * time) * B4 + 12 * pi ^ 2 * B1 ^ 2 * cos(-geom.t_max + geom.omega * time) * sin(-geom.t_max + geom.omega * time) ^ 2 * B3 + 12 * pi ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) * sin(-geom.t_max + geom.omega * time) ^ 2 * B3 ^ 2 + 8 * pi ^ 2 * B2 * B1 * cos(-geom.t_max + geom.omega * time) * B4 + 8 * pi ^ 2 * B2 * B3 * cos(-geom.t_max + geom.omega * time) * B4 - 4 * pi ^ 2 * B2 ^ 2 * sin(-geom.t_max + geom.omega * time) ^ 2 * B3 * cos(-geom.t_max + geom.omega * time) - 4 * pi ^ 2 * sin(-geom.t_max + geom.omega * time) ^ 2 * B4 ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) - 4 * pi ^ 2 * sin(-geom.t_max + geom.omega * time) ^ 2 * B4 ^ 2 * B3 * cos(-geom.t_max + geom.omega * time) - 8 * pi ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 3 * B3 * B2 * B4 - 8 * pi ^ 2 * B1 * cos(-geom.t_max + geom.omega * time) ^ 3 * B2 * B4 - 4 * pi ^ 2 * B2 ^ 2 * sin(-geom.t_max + geom.omega * time) ^ 2 * B1 * cos(-geom.t_max + geom.omega * time)) * geom.omega * pi * (geom.lambda ^ 2 + 4 * pi ^ 2 * B1 ^ 2 - 4 * pi ^ 2 * B1 ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 2 + 8 * pi ^ 2 * B1 * B3 - 8 * pi ^ 2 * B1 * B3 * cos(-geom.t_max + geom.omega * time) ^ 2 - 8 * pi ^ 2 * B1 * sin(-geom.t_max + geom.omega * time) * B2 * cos(-geom.t_max + geom.omega * time) - 8 * pi ^ 2 * B1 * sin(-geom.t_max + geom.omega * time) * cos(-geom.t_max + geom.omega * time) * B4 + 4 * pi ^ 2 * B3 ^ 2 - 4 * pi ^ 2 * B3 ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 2 - 8 * pi ^ 2 * sin(-geom.t_max + geom.omega * time) * B3 * B2 * cos(-geom.t_max + geom.omega * time) - 8 * pi ^ 2 * sin(-geom.t_max + geom.omega * time) * B3 * cos(-geom.t_max + geom.omega * time) * B4 + 4 * pi ^ 2 * B2 ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 2 + 8 * pi ^ 2 * B2 * cos(-geom.t_max + geom.omega * time) ^ 2 * B4 + 4 * pi ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 2 * B4 ^ 2) ^ (-3 / 2);
    n_t(2) = -4 * geom.lambda * pi ^ 2 * cos(theta) * geom.omega * (B1 * cos(-geom.t_max + geom.omega * time) + cos(-geom.t_max + geom.omega * time) * B3 + B2 * sin(-geom.t_max + geom.omega * time) + sin(-geom.t_max + geom.omega * time) * B4) * (B1 * sin(-geom.t_max + geom.omega * time) + sin(-geom.t_max + geom.omega * time) * B3 - B2 * cos(-geom.t_max + geom.omega * time) - cos(-geom.t_max + geom.omega * time) * B4) * (geom.lambda ^ 2 + 4 * pi ^ 2 * B1 ^ 2 - 4 * pi ^ 2 * B1 ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 2 + 8 * pi ^ 2 * B1 * B3 - 8 * pi ^ 2 * B1 * B3 * cos(-geom.t_max + geom.omega * time) ^ 2 - 8 * pi ^ 2 * B1 * sin(-geom.t_max + geom.omega * time) * B2 * cos(-geom.t_max + geom.omega * time) - 8 * pi ^ 2 * B1 * sin(-geom.t_max + geom.omega * time) * cos(-geom.t_max + geom.omega * time) * B4 + 4 * pi ^ 2 * B3 ^ 2 - 4 * pi ^ 2 * B3 ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 2 - 8 * pi ^ 2 * sin(-geom.t_max + geom.omega * time) * B3 * B2 * cos(-geom.t_max + geom.omega * time) - 8 * pi ^ 2 * sin(-geom.t_max + geom.omega * time) * B3 * cos(-geom.t_max + geom.omega * time) * B4 + 4 * pi ^ 2 * B2 ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 2 + 8 * pi ^ 2 * B2 * cos(-geom.t_max + geom.omega * time) ^ 2 * B4 + 4 * pi ^ 2 * cos(-geom.t_max + geom.omega * time) ^ 2 * B4 ^ 2) ^ (-3 / 2);
    n_t(3) = 0;
    
end


